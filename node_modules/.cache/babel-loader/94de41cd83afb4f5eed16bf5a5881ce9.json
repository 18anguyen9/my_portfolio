{"ast":null,"code":"import { useState, useRef, useEffect } from \"react\";\n\nfunction Score(_ref) {\n  let {\n    data\n  } = _ref;\n  //const [dailyScore,SetDailyScore] = useState(null);\n  const current = new Date();\n  const date = current.getDay();\n  /*useEffect (() => {\n      let curmon = 0;\n      let curtues = 0;\n      let curwed = 0;\n      let curthur = 0;\n      let curfri = 0;\n      let cursat = 0;\n      let cursun = 0;\n      data.map((task)=>{\n          curmon+=task.monday\n          curtues+=task.tuesday\n          curwed+=task.wednesday\n          curthur+=task.thursday\n          curfri+=task.friday\n          cursat+=task.saturday\n          cursun+=task.sunday\n      });\n      const curScore = {\n          0:curmon/data.length,\n          1:curtues/data.length,\n          2:curwed/data.length,\n          3:curthur/data.length,\n          4:curfri/data.length,\n          5:cursat/data.length,\n          6:cursun/data.length\n      }\n      SetDailyScore(curScore[date-1])\n  });*/\n\n  let curmon = 0;\n  let curtues = 0;\n  let curwed = 0;\n  let curthur = 0;\n  let curfri = 0;\n  let cursat = 0;\n  let cursun = 0;\n  data.map(task => {\n    curmon += task.monday;\n    curtues += task.tuesday;\n    curwed += task.wednesday;\n    curthur += task.thursday;\n    curfri += task.friday;\n    cursat += task.saturday;\n    cursun += task.sunday;\n  });\n  const curScore = {\n    0: curmon / data.length,\n    1: curtues / data.length,\n    2: curwed / data.length,\n    3: curthur / data.length,\n    4: curfri / data.length,\n    5: cursat / data.length,\n    6: cursun / data.length\n  };\n  return curScore[date - 1];\n  /*return (\n      <div>\n          <div className=''>\n              \n              <div>{dailyScore*100}%</div>\n              \n              \n          </div>\n          \n      </div>\n  )*/\n}\n\n_c = Score;\nexport default Score;\n\nvar _c;\n\n$RefreshReg$(_c, \"Score\");","map":{"version":3,"names":["useState","useRef","useEffect","Score","data","current","Date","date","getDay","curmon","curtues","curwed","curthur","curfri","cursat","cursun","map","task","monday","tuesday","wednesday","thursday","friday","saturday","sunday","curScore","length"],"sources":["/Users/alexnguyen/Desktop/my_portfolio/src/pages/todo/score.js"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nfunction Score({ data }){\n    //const [dailyScore,SetDailyScore] = useState(null);\n    const current = new Date();\n    const date = current.getDay();\n    \n    /*useEffect (() => {\n        let curmon = 0;\n        let curtues = 0;\n        let curwed = 0;\n        let curthur = 0;\n        let curfri = 0;\n        let cursat = 0;\n        let cursun = 0;\n        data.map((task)=>{\n            curmon+=task.monday\n            curtues+=task.tuesday\n            curwed+=task.wednesday\n            curthur+=task.thursday\n            curfri+=task.friday\n            cursat+=task.saturday\n            cursun+=task.sunday\n        });\n        const curScore = {\n            0:curmon/data.length,\n            1:curtues/data.length,\n            2:curwed/data.length,\n            3:curthur/data.length,\n            4:curfri/data.length,\n            5:cursat/data.length,\n            6:cursun/data.length\n        }\n        SetDailyScore(curScore[date-1])\n    });*/\n\n    let curmon = 0;\n        let curtues = 0;\n        let curwed = 0;\n        let curthur = 0;\n        let curfri = 0;\n        let cursat = 0;\n        let cursun = 0;\n        data.map((task)=>{\n            curmon+=task.monday\n            curtues+=task.tuesday\n            curwed+=task.wednesday\n            curthur+=task.thursday\n            curfri+=task.friday\n            cursat+=task.saturday\n            cursun+=task.sunday\n        });\n        const curScore = {\n            0:curmon/data.length,\n            1:curtues/data.length,\n            2:curwed/data.length,\n            3:curthur/data.length,\n            4:curfri/data.length,\n            5:cursat/data.length,\n            6:cursun/data.length\n        }\n        return (curScore[date-1])\n\n    \n\n\n    /*return (\n        <div>\n            <div className=''>\n                \n                <div>{dailyScore*100}%</div>\n                \n                \n            </div>\n            \n        </div>\n    )*/\n}\nexport default Score;"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;;AACA,SAASC,KAAT,OAAwB;EAAA,IAAT;IAAEC;EAAF,CAAS;EACpB;EACA,MAAMC,OAAO,GAAG,IAAIC,IAAJ,EAAhB;EACA,MAAMC,IAAI,GAAGF,OAAO,CAACG,MAAR,EAAb;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI,IAAIC,MAAM,GAAG,CAAb;EACI,IAAIC,OAAO,GAAG,CAAd;EACA,IAAIC,MAAM,GAAG,CAAb;EACA,IAAIC,OAAO,GAAG,CAAd;EACA,IAAIC,MAAM,GAAG,CAAb;EACA,IAAIC,MAAM,GAAG,CAAb;EACA,IAAIC,MAAM,GAAG,CAAb;EACAX,IAAI,CAACY,GAAL,CAAUC,IAAD,IAAQ;IACbR,MAAM,IAAEQ,IAAI,CAACC,MAAb;IACAR,OAAO,IAAEO,IAAI,CAACE,OAAd;IACAR,MAAM,IAAEM,IAAI,CAACG,SAAb;IACAR,OAAO,IAAEK,IAAI,CAACI,QAAd;IACAR,MAAM,IAAEI,IAAI,CAACK,MAAb;IACAR,MAAM,IAAEG,IAAI,CAACM,QAAb;IACAR,MAAM,IAAEE,IAAI,CAACO,MAAb;EACH,CARD;EASA,MAAMC,QAAQ,GAAG;IACb,GAAEhB,MAAM,GAACL,IAAI,CAACsB,MADD;IAEb,GAAEhB,OAAO,GAACN,IAAI,CAACsB,MAFF;IAGb,GAAEf,MAAM,GAACP,IAAI,CAACsB,MAHD;IAIb,GAAEd,OAAO,GAACR,IAAI,CAACsB,MAJF;IAKb,GAAEb,MAAM,GAACT,IAAI,CAACsB,MALD;IAMb,GAAEZ,MAAM,GAACV,IAAI,CAACsB,MAND;IAOb,GAAEX,MAAM,GAACX,IAAI,CAACsB;EAPD,CAAjB;EASA,OAAQD,QAAQ,CAAClB,IAAI,GAAC,CAAN,CAAhB;EAKJ;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;;KA3EQJ,K;AA4ET,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}